const greet = name => `Hello, ${name}!`;
const fetchData = async url => { const response = await fetch(url); return response.json(); }
const greet = name => `Hello, ${name}!`;

const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
apple - false
const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);

false / false
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
if (getRandomBoolean()) { console.log("True"); } else { console.log("False"); }
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
36 * false

const isEven = num => num % 2 === 0;
const removeDuplicates = array => Array.from(new Set(array));

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const findSmallestNumber = numbers => Math.min(...numbers);
const getRandomIndex = array => Math.floor(Math.random() * array.length);
const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
43 + 63,80,84,12,73,36,50,94,0,47,15,92,85,34,9,65,59,88,62,20,86,9,79,23,36,67,73,49,95,42,75,67
const getUniqueValues = array => [...new Set(array)];
const isPalindrome = str => str === str.split("").reverse().join("");
